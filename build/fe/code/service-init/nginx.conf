########################################################
#main context
########################################################

error_log                           /etc/nginx/logs/nginx-error.log;
worker_processes                    2;
worker_rlimit_nofile                65535;

events { 
worker_connections                  4096;
accept_mutex                        on;
}

########################################################
#http context
########################################################

http {
    
    ###############################
    #disable the display of nginx version 
    ###############################
    server_tokens                   off;

    ###############################
    #let nginx identify file types
    ###############################
    include                         /etc/nginx/mime.types;
    default_type                    application/octet-stream;

    ###############################
    #log file config
    ###############################
    log_format                      main '$remote_addr - $remote_user [$time_local]  $status '
                                        '"$request" $body_bytes_sent "$http_referer" '
                                        '"$http_user_agent" "$http_x_forwarded_for"';
    access_log                      /etc/nginx/logs/nginx-access.log main;

    ###############################
    #messages for error codes
    ###############################
    map $status $status_text {
      401 'Unauthorized';
      402 'Payment Required';
      405 'Method Not Allowed';
      406 'Not Acceptable';
      407 'Proxy Authentication Required';
      408 'Request Timeout';
      409 'Conflict';
      410 'Gone';
      411 'Length Required';
      412 'Precondition Failed';
      413 'Payload Too Large';
      414 'URI Too Long';
      415 'Unsupported Media Type';
      416 'Range Not Satisfiable';
      417 'Expectation Failed';
      418 'I\'m a teapot';
      421 'Misdirected Request';
      422 'Unprocessable Entity';
      423 'Locked';
      424 'Failed Dependency';
      425 'Too Early';
      426 'Upgrade Required';
      428 'Precondition Required';
      429 'Too Many Requests';
      431 'Request Header Fields Too Large';
      451 'Unavailable For Legal Reasons';
      501 'Not Implemented';
      502 'Bad Gateway';
      503 'Service Unavailable';
      504 'Gateway Timeout';
      505 'HTTP Version Not Supported';
      506 'Variant Also Negotiates';
      507 'Insufficient Storage';
      508 'Loop Detected';
      510 'Not Extended';
      511 'Network Authentication Required';
      default 'Something went wrong';
    }

    ###############################
    #redirect to app server
    ###############################
    upstream app {
        server                      app:8000 fail_timeout=0;
    }

    ###############################
    #redirect all requests to https
    ###############################
    server {
        listen                      8080 default_server;
        listen                      [::]:8080 default_server;
        server_name                 _;
        return                      301 https://$host$request_uri;
    }

    ###############################
    #app redirect config
    ###############################
    server {

        ###############################
        #set DNS resolution to the Docker DNS
        #make timeout small so nginx is sooner aware of when the app goes down
        ###############################
        resolver 127.0.0.11 valid=30s;

        ###############################
        #variable for app upstream so nginx will not fail if it is offline
        ###############################
        set $upstream_app app;

        #variables for custom error page defaults
        error_page 401 402 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 501 502 503 504 505 506 507 508 510 511 /error.html;

        listen                      8443 ssl http2;
        server_name                 app;
        keepalive_timeout           5;
        client_max_body_size        4G;

        ssl_stapling                on;
        ssl_stapling_verify         on;
        ssl_prefer_server_ciphers   on;
        ssl_session_timeout         1h;
        ssl_session_cache           shared:SSL:10m;
        ssl_protocols               TLSv1.2 TLSv1.3;
        ssl_certificate             /etc/nginx/ssl/app.crt;
        ssl_certificate_key         /etc/nginx/ssl/app.key;
        ssl_trusted_certificate     /etc/nginx/ssl/ca.crt;
        ssl_ciphers                 ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

        proxy_cookie_path           / "/; HTTPOnly; Secure";
        add_header                  'Referrer-Policy' 'origin';
        add_header                  X-Frame-Options SAMEORIGIN;
        add_header                  X-Content-Type-Options "nosniff";
        add_header                  X-XSS-Protection "1; mode=block" always;  
        add_header                  Content-Security-Policy "frame-ancestors 'self';";
        add_header                  Content-Security-Policy "upgrade-insecure-requests; ";
        add_header                  Strict-Transport-Security "max-age=31536000";

        location / {
            proxy_pass              https://$upstream_app;
            proxy_set_header        X-Real-IP           $remote_addr;
            proxy_set_header        X-Forwarded-For     $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto   $scheme;
            proxy_set_header        Host                $host;
        }

        location = /error.html {
          ssi on;
          internal;
          auth_basic off;
          root /etc/nginx/pages;
        }

        ###############################
        #app file serving
        ###############################
        location /static/ {
            alias /static/;
        }
        location /media/ {
            alias /media/;
        }

    }

}